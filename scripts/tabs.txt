-- Generated by Oracle SQL Developer Data Modeler 20.3.0.283.0710
--   at:        2021-01-13 00:52:32 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE user bd2a02 identified by account unlock 
;

CREATE user bd2a02_app identified by account unlock 
;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE definicje_wlasciwosci (
    kod_wlasciwosci  VARCHAR2(5 CHAR) DEFAULT '0' NOT NULL,
    nazwa            VARCHAR2(20 CHAR) NOT NULL,
    opcjonalnosc     CHAR(1 CHAR) DEFAULT 'N' NOT NULL,
    typ_danych       CHAR(1 CHAR) DEFAULT 'v' NOT NULL,
    opis             VARCHAR2(200 CHAR)
)
LOGGING;

ALTER TABLE definicje_wlasciwosci
    ADD CHECK ( opcjonalnosc IN ( 'N', 'Y' ) );

ALTER TABLE definicje_wlasciwosci
    ADD CHECK ( typ_danych IN ( 'd', 'n', 'v' ) );

COMMENT ON TABLE definicje_wlasciwosci IS
    'Definicja danej właściwości stanowiącą składową typu umowy - ma swoją nazwę, typ przechowywanych danych, określenie opcjonalności i może zawierać opis.';

COMMENT ON COLUMN definicje_wlasciwosci.nazwa IS
    'Nazwa definiowanej właściwości';

COMMENT ON COLUMN definicje_wlasciwosci.opcjonalnosc IS
    'Opcjonalność danej właściwości wyrażona jako T/N';

COMMENT ON COLUMN definicje_wlasciwosci.typ_danych IS
    'Typ danych opisywanej właściwości';

COMMENT ON COLUMN definicje_wlasciwosci.opis IS
    'Opis definiowanej właściwości';

GRANT INSERT, SELECT, UPDATE, DELETE ON definicje_wlasciwosci TO bd2a02_app;
/
ALTER TABLE definicje_wlasciwosci ADD constraint def_wlasc_val_chk CHECK ( opcjonalnosc IN ( 'T', 'N' ) and typ_danych IN ( 'v', 'd',
 'n' ) );
ALTER TABLE definicje_wlasciwosci ADD CONSTRAINT def_wlasc_pk PRIMARY KEY ( kod_wlasciwosci );

ALTER TABLE definicje_wlasciwosci ADD CONSTRAINT def_wlasc_uk UNIQUE ( nazwa );

CREATE TABLE typy_umow (
    kod_typu_umowy  VARCHAR2(4 CHAR) DEFAULT '0' NOT NULL,
    nazwa           VARCHAR2(30 CHAR) NOT NULL,
    opis            VARCHAR2(200 CHAR)
)
LOGGING;

COMMENT ON TABLE typy_umow IS
    'Typ zawieranej umowy, określony w momencie zawarcia umowy.';

COMMENT ON COLUMN typy_umow.nazwa IS
    'Nazwa typu umowy';

COMMENT ON COLUMN typy_umow.opis IS
    'Opis typu umowy';

GRANT DELETE, SELECT, UPDATE, INSERT ON typy_umow TO bd2a02_app;

ALTER TABLE typy_umow ADD CONSTRAINT typ_um_pk PRIMARY KEY ( kod_typu_umowy );

ALTER TABLE typy_umow ADD CONSTRAINT typ_um_uk UNIQUE ( nazwa );

CREATE TABLE umowy (
    kod_typu_umowy          VARCHAR2(4 CHAR) NOT NULL,
    id_umowy                NUMBER(5) DEFAULT 0 NOT NULL,
    id_wykonawcy            NUMBER(4) NOT NULL,
    data_zawarcia           DATE NOT NULL,
    temat                   VARCHAR2(200 CHAR) NOT NULL,
    kwota                   NUMBER(15, 2) NOT NULL,
    początek_obowiązywania  DATE NOT NULL,
    koniec_obowiązywania    DATE NOT NULL
)
LOGGING;

COMMENT ON TABLE umowy IS
    'Generyczna reprezentacja umowy - zawierana między firmą korzystającą z bazy danych i wykonawcą czynności, umowy mogą mieć różne typy, a więc również treść.';

COMMENT ON COLUMN umowy.data_zawarcia IS
    'Data zawarcia umowy';

COMMENT ON COLUMN umowy.temat IS
    'Temat zawartej umowy';

COMMENT ON COLUMN umowy.kwota IS
    'Kwota, jaką należy zapłacić wykonawcy czynności.';

COMMENT ON COLUMN umowy.początek_obowiązywania IS
    'Termin, w którym umowa staje się ważna.';

COMMENT ON COLUMN umowy.koniec_obowiązywania IS
    'Koniec obowiązywania umowy.';

CREATE INDEX id_wykonawcy_idx ON
    umowy (
        kod_typu_umowy,
        id_umowy
    )
        LOGGING;

GRANT DELETE, SELECT, UPDATE, INSERT ON umowy TO bd2a02_app;

ALTER TABLE umowy ADD CONSTRAINT um_pk PRIMARY KEY ( kod_typu_umowy,
                                                     id_umowy );

ALTER TABLE umowy ADD CONSTRAINT um_uk UNIQUE ( id_umowy );

CREATE TABLE wartosci_wlasciowsci (
    kod_typu_umowy   VARCHAR2(4 CHAR) NOT NULL,
    id_umowy         NUMBER(5) NOT NULL,
    kod_wlasciwosci  VARCHAR2(5 CHAR) NOT NULL,
    wartosc          VARCHAR2(40 CHAR)
)
LOGGING;

COMMENT ON TABLE wartosci_wlasciowsci IS
    'Wartość definiowanej właściwości - opcjonalna ze względu na parametr opcjonalności.';

COMMENT ON COLUMN wartosci_wlasciowsci.wartosc IS
    'Wartość definiowanej właściwości ';

CREATE INDEX wlasc_typ_idx ON
    wartosci_wlasciowsci (
        kod_typu_umowy
    ASC,
        kod_wlasciwosci
    ASC )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON wartosci_wlasciowsci TO bd2a02_app;

ALTER TABLE wartosci_wlasciowsci
    ADD CONSTRAINT wart_wlasc_pk PRIMARY KEY ( kod_typu_umowy,
                                               id_umowy,
                                               kod_wlasciwosci );

CREATE TABLE wlasciwosci_typow_umow (
    kod_typu_umowy   VARCHAR2(4 CHAR) NOT NULL,
    kod_wlasciwosci  VARCHAR2(5 CHAR) NOT NULL
)
LOGGING;

COMMENT ON TABLE wlasciwosci_typow_umow IS
    'Właściwość przypisana danemu typowi umowy - wiele właściwości może być przypisane danemu typowi, każda z nich ma określony typ i może mieć wartość (chyba, że wartość jest opcjonalna)';

CREATE INDEX wl_typ_def_wlasc_idx ON
    wlasciwosci_typow_umow (
        kod_wlasciwosci
    ASC )
        LOGGING;

GRANT DELETE, INSERT, SELECT, UPDATE ON wlasciwosci_typow_umow TO bd2a02_app;

ALTER TABLE wlasciwosci_typow_umow ADD CONSTRAINT wlasc_typ_um_pk PRIMARY KEY ( kod_typu_umowy,
                                                                                kod_wlasciwosci );

CREATE TABLE wykonawcy_czynnosci (
    id_wykonawcy             NUMBER(4) DEFAULT 1 NOT NULL,
    kod_pocztowy             CHAR(6 CHAR) NOT NULL,
    miejscowość              VARCHAR2(30 CHAR) NOT NULL,
    ulica                    VARCHAR2(40 CHAR) NOT NULL,
    numer_domu               VARCHAR2(6 CHAR) NOT NULL,
    numer_mieszkania         VARCHAR2(6 CHAR),
    selektor                 CHAR(1 CHAR) NOT NULL,
    nazwa                    VARCHAR2(50 CHAR),
    kod_nip                  CHAR(10 CHAR),
    kod_regon                VARCHAR2(9 CHAR),
    pesel                    CHAR(11 CHAR),
    numer_dowodu_osobistego  CHAR(6 CHAR),
    imie                     VARCHAR2(30 CHAR),
    nazwisko                 VARCHAR2(50 CHAR),
    id_reprezentanta         NUMBER(4)
)
LOGGING;

COMMENT ON TABLE wykonawcy_czynnosci IS
    'Stały współpracownik firmy, który może stać się podmiotem podpisywanej umowy i być zobowiązanym do wykonania opisanej w niej czynności';

COMMENT ON COLUMN wykonawcy_czynnosci.kod_pocztowy IS
    'Kod pocztowy przypisany do danego adres - 5 liczb, po 2 pierwszych oddzielone myślnikiem';

COMMENT ON COLUMN wykonawcy_czynnosci.miejscowość IS
    'Nazwa miejscowości powiązanej  z danym adresem.';

COMMENT ON COLUMN wykonawcy_czynnosci.ulica IS
    'Nazwa ulicy powiązanej z danym adresem.';

COMMENT ON COLUMN wykonawcy_czynnosci.numer_domu IS
    'Numer domu znajdującego się na ullicy powiązanej z adresem.';

COMMENT ON COLUMN wykonawcy_czynnosci.numer_mieszkania IS
    'Opcjonalny numer mieszkania.';

COMMENT ON COLUMN wykonawcy_czynnosci.selektor IS
    'Okresla podtyp dane - ''p'' - pracownik, ''f'' - firma';

COMMENT ON COLUMN wykonawcy_czynnosci.nazwa IS
    'Nazwa firmy/spółki ';

COMMENT ON COLUMN wykonawcy_czynnosci.kod_nip IS
    '10-cyfrowy kod, unikalny dla danej firmy';

COMMENT ON COLUMN wykonawcy_czynnosci.kod_regon IS
    'Unikalny kod dla danej firmy, długość pomiędzy 7 a 9';

COMMENT ON COLUMN wykonawcy_czynnosci.pesel IS
    'Unikalny 11-cyfrowy kod definiujący pracownika';

COMMENT ON COLUMN wykonawcy_czynnosci.numer_dowodu_osobistego IS
    'Unikalny kod definiujący pracownika o długości 6, gdzie pierwsza cyfra jest cyfrą kontrolną stanowiącą wynik dzielenia modulo10 sumy cyfr od 2. do 6.';

COMMENT ON COLUMN wykonawcy_czynnosci.imie IS
    'Imię pracownika';

COMMENT ON COLUMN wykonawcy_czynnosci.nazwisko IS
    'Nazwisko pracownika';

GRANT DELETE, INSERT, SELECT, UPDATE ON wykonawcy_czynnosci TO bd2a02_app;
/
ALTER TABLE wykonawcy_czynnosci add constraint wyk_czyn_regon_ck
check(length(kod_regon) >= 7);

ALTER TABLE wykonawcy_czynnosci
    ADD CONSTRAINT wyk_czyn_sel_ck CHECK ( selektor IN ( 'p', 'f' ) );

ALTER TABLE wykonawcy_czynnosci
    ADD CONSTRAINT wyk_czyn_type_ck CHECK ( ( selektor = 'p'
                                              AND pesel IS NOT NULL
                                                  AND imie IS NOT NULL
                                                      AND nazwisko IS NOT NULL
                                                          AND numer_dowodu_osobistego IS NOT NULL
                                                              AND id_reprezentanta IS NULL
                                                                  AND nazwa IS NULL
                                                                      AND kod_nip IS NULL
                                                                          AND kod_regon IS NULL )
                                            OR ( selektor = 'f'
                                                 AND nazwa IS NOT NULL
                                                     AND kod_nip IS NOT NULL
                                                         AND kod_regon IS NOT NULL
                                                             AND pesel IS NULL
                                                                 AND imie IS NULL
                                                                     AND nazwisko IS NULL
                                                                         AND numer_dowodu_osobistego IS NULL ) );

ALTER TABLE wykonawcy_czynnosci ADD CONSTRAINT wyk_czyn_pk PRIMARY KEY ( id_wykonawcy );

ALTER TABLE umowy
    ADD CONSTRAINT u_typ_um_fk FOREIGN KEY ( kod_typu_umowy )
        REFERENCES typy_umow ( kod_typu_umowy )
    DEFERRABLE;

ALTER TABLE umowy
    ADD CONSTRAINT um_wyk_czyn_fk FOREIGN KEY ( id_wykonawcy )
        REFERENCES wykonawcy_czynnosci ( id_wykonawcy )
    DEFERRABLE;

ALTER TABLE wlasciwosci_typow_umow
    ADD CONSTRAINT wt_def_wlasc_fk FOREIGN KEY ( kod_wlasciwosci )
        REFERENCES definicje_wlasciwosci ( kod_wlasciwosci )
    DEFERRABLE;

ALTER TABLE wlasciwosci_typow_umow
    ADD CONSTRAINT wt_typ_um_fk FOREIGN KEY ( kod_typu_umowy )
        REFERENCES typy_umow ( kod_typu_umowy )
    DEFERRABLE;

ALTER TABLE wartosci_wlasciowsci
    ADD CONSTRAINT ww_um_fk FOREIGN KEY ( kod_typu_umowy,
                                          id_umowy )
        REFERENCES umowy ( kod_typu_umowy,
                           id_umowy )
            ON DELETE CASCADE
    DEFERRABLE;

ALTER TABLE wartosci_wlasciowsci
    ADD CONSTRAINT ww_wlasc_typ_fk FOREIGN KEY ( kod_typu_umowy,
                                                 kod_wlasciwosci )
        REFERENCES wlasciwosci_typow_umow ( kod_typu_umowy,
                                            kod_wlasciwosci )
    DEFERRABLE;

ALTER TABLE wykonawcy_czynnosci
    ADD CONSTRAINT wyk_czyn_rep_fk FOREIGN KEY ( id_reprezentanta )
        REFERENCES wykonawcy_czynnosci ( id_wykonawcy )
    DEFERRABLE;